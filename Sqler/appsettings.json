{
  "Logging": {
    "LogLevel": {
      "Default": "Warning"
    }
  },



  /* asp.net core 原始web服务配置 */
  "server": {

    "urls": [ "http://*:4570" ],

    /* 映射静态文件。若不指定则不映射静态文件 */
    "staticFiles": {

      /* 静态文件路径。可为相对路径或绝对路径。若为空或空字符串则为默认路径（wwwroot）。demo:"wwwroot/demo" */
      //"rootPath": "wwwroot",

      /* 默认页面（可不指定）。An ordered list of file names to select by default. List length and ordering  may affect performance */
      "defaultFileNames": [],

      /* 是否可浏览目录(default false)。Enables directory browsing */
      //"useDirectoryBrowser": false,

      /* 静态文件类型映射配置的文件路径。可为相对路径或绝对路径。例如"contentTypeMap.json"。若不指定（或指定的文件不存在）则不指定文件类型映射配置 */
      "contentTypeMapFile": "contentTypeMap.json",

      /* 回应静态文件时额外添加的http回应头。可不指定。 */
      "responseHeaders": {

        //设置浏览器静态文件缓存2592000秒（30天）
        //"Cache-Control": "public,max-age=2592000"
      }
    }
  },


  "Sqler": {
    /* Data文件夹的路径， 优先从arg第一个参数获取，其次是这里，若不指定则默认为"Data" */
    "//DataPath": "Data"
  },




  "//Sers": {
    /* 通讯层配置 */
    "CL": {
      /* 共用配置，子项共用，覆写子项未指定的配置 */
      "Config": {

        /* 请求超时时间（单位ms，默认60000） */
        "requestTimeoutMs": 60000,

        /* 后台处理消息的线程个数（单位个，默认2） */
        "workThreadCount": 2,

        //HeartBeat
        /* 心跳检测时间间隔（单位ms，默认10000,若指定为0则不进行心跳检测） */
        "heartBeatIntervalMs": 10000,
        /* 心跳检测超时时间（单位ms，默认30000） */
        "heartBeatTimeoutMs": 30000,
        /* 心跳检测失败重试次数（单位次，默认10） */
        "heartBeatRetryCount": 10,

        /* 连接秘钥，用以验证连接安全性。服务端和客户端必须一致 */
        "secretKey": "SersCL"
      },
      /* one conn is one channel.can be multiable */
      "Client": [
        {
          // Socket.Iocp
          /* (x.1) type - Iocp */
          /* 在此Assembly中查找builder */
          //"assemblyFile": "Sers.CL.Socket.Iocp.dll",
          /* the class of builder in assemblyFile  */
          "className": "Sers.CL.Socket.Iocp.OrganizeClientBuilder",


          /* (x.2) conn config */
          /* 服务端 host地址。例如： "127.0.0.1"、"sersms.com" */
          "host": "127.0.0.1",
          /* 服务端 监听端口号。例如： 4501 */
          "port": 4501
        }
      ]
    },


    /* LocalApiService 配置,可不指定 */
    "LocalApiService": {

      /* 后台服务的线程个数（单位个，默认0,代表不开启服务） */
      "workThreadCount": 16,

      /* 静态文件映射器。映射站点静态文件，可多个,可不指定 */
      "StaticFileMap": [
        {
          /* api路由前缀，例如 "/demo/ui/*" */
          "route": "/autotemp/*",
          /* api描述，静态文件描述 */
          "apiName": "autotemp站点静态文件",
          /* 额外静态文件类型映射配置的文件路径（mappings.json），例如"wwwroot/mappings.json"。若不指定（或指定的文件不存在）则不添加额外文件类型映射配置 */
          //"ContentTypeMapFile": "mappings.json",
          /* 静态文件的路径，如 "wwwroot/demo" */
          "staticFileDirectory": "wwwroot/autotemp"
        },
        {
          /* api路由前缀，例如 "/demo/ui/*" */
          "route": "/sqler/*",
          /* api描述，静态文件描述 */
          "apiName": "sqler站点静态文件",
          /* 额外静态文件类型映射配置的文件路径（mappings.json），例如"wwwroot/mappings.json"。若不指定（或指定的文件不存在）则不添加额外文件类型映射配置 */
          //"ContentTypeMapFile": "mappings.json",
          /* 静态文件的路径，如 "wwwroot/demo" */
          "staticFileDirectory": "wwwroot/sqler"
        }
      ]

    },


    /* ServiceStation配置,可不指定 */
    "ServiceStation": {

      /* serviceStation站点信息 */
      "serviceStationInfo": {
        "serviceStationName": "autotemp"
      }
    }
  },



  "serslot": {

    /* 额外api。SsApiDesc格式。除了系统api外，可以指定额外api。若指定返回数据（reply）,则直接返回数据；若不指定返回数据，则由host进行处理 */
    "//extApi": [
      {
        "description": "用户必须登录",
        //路由(可为范接口,如 "/a/*" )
        "route": "/index.html",
        //扩展配置（json）
        "extendConfig": {
          //请求方式，若不指定则默认支持所有方式（demo: POST、GET、DELETE、PUT等）
          "httpMethod": "GET",

          //返回数据（可为数值、字符串、对象、数组）。若不指定，则由host进行处理
          "reply": { "hello": "sers" },

          //系统生成的接口文字描述
          "sysDesc": "method:GET"
        }
      },
      {
        //路由(可为范接口,如 "/a/*" )
        "route": "/*"
      }

    ]

  },




  /* Vit工具配置，可不指定 */
  "Vit": {

    "Dapper": {
      /* SqlCommand CommandTimeout，可不指定 */
      "CommandTimeout": 0
    },

    /* 日志配置,可不指定 */
    "Logger": {
      /* print the log to console. default:false  */
      "PrintToConsole": true
    },


    /* 序列化配置，可不指定 */
    "Serialization": {
      /* 序列化字符编码。可不指定，默认 UTF8。只可为 UTF7,UTF8,UTF32,ASCII,Unicode。 */
      "Encoding": "UTF8",

      /* 时间序列化格式。可不指定，默认 "yyyy-MM-dd HH:mm:ss" */
      "DateTimeFormat": "yyyy-MM-dd HH:mm:ss"
    },


    "Kestrel": {
      /* (int64) the maximum allowed size of any request body in bytes.  When set to null, the maximum request body size is unlimited. */
      "MaxRequestBodySize": 2000000000,

      /* (int32) A limit on the length of individual form values. Forms containing values that exceed this limit will throw an System.IO.InvalidDataException when parsed. */
      "ValueLengthLimit": 2000000000,

      /* (int64) A limit for the length of each multipart body. Forms sections that exceed this limit will throw an System.IO.InvalidDataException when parsed. */
      "MultipartBodyLengthLimit": 2000000000
    }

  }



}
